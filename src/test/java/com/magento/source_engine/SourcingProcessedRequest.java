package com.magento.source_engine;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.String;
import java.time.LocalDateTime;
import java.util.List;

/**
 * The sourcing engine's limited view of an order
 */
public final class SourcingProcessedRequest {
  /**
   * The UUID of the request supplied by MCOM
   */
  public final String uuid;

  /**
   * The UUID of the order for which this request was made
   */
  public final String orderUuid;

  /**
   * The time when the request was received by the sourcing engine
   */
  public final LocalDateTime receivedOn;

  /**
   * The time when the request was last update by the sourcing engine
   */
  public final LocalDateTime lastUpdatedOn;

  /**
   *
   *                         The current processing state of the request. One of the following values:
   *                         RECEIVED, QUEUED, CANCELLED, PROCESSING, RESPONDED, ERROR, UNKNOWN
   *                     
   * State
   */
  public final String state;

  /**
   * The UUID of the wave this sourcing request belongs to (generated by the sourcing engine)
   * Wave UUID
   */
  public final String waveId;

  /**
   * The sourcing response returned by srcrr. If null, this has not been sourced.
   * The sourcing response returned by srcrr.
   */
  public final SourcingResponse sourcingResponse;

  /**
   *
   *                         This helps determine what part of processing the sourcing request has completed
   *                     
   * The status entries made during request processing
   */
  public final List<SourcingStatusEntry> statusEntries;

  /**
   *
   *                         The type of data varies, some of it is generated/calculated within
   *                         the sourcing engine (e.g. "activeSources") while other context entries
   *                         might have come from external services (e.g. "sourceDetails")
   *                     
   * Contextual data used by the source engine
   */
  public final List<ContextEntry> contextEntries;

  @JsonCreator
  public SourcingProcessedRequest(@JsonProperty(value = "uuid", required = true) final String uuid,
      @JsonProperty(value = "order_uuid", required = true) final String orderUuid,
      @JsonProperty(value = "received_on", required = true) final LocalDateTime receivedOn,
      @JsonProperty(value = "last_updated_on", required = true) final LocalDateTime lastUpdatedOn,
      @JsonProperty(value = "state", required = true) final String state,
      @JsonProperty(value = "wave_id", required = false) final String waveId,
      @JsonProperty(value = "sourcing_response", required = false) final SourcingResponse sourcingResponse,
      @JsonProperty(value = "status_entries", required = true) final List<SourcingStatusEntry> statusEntries,
      @JsonProperty(value = "context_entries", required = true) final List<ContextEntry> contextEntries) {
    this.uuid = uuid;
    this.orderUuid = orderUuid;
    this.receivedOn = receivedOn;
    this.lastUpdatedOn = lastUpdatedOn;
    this.state = state;
    this.waveId = waveId;
    this.sourcingResponse = sourcingResponse;
    this.statusEntries = statusEntries;
    this.contextEntries = contextEntries;
  }
}
